"""
Django settings for presentation_service project.

Generated by 'django-admin startproject' using Django 5.2.1.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
from decouple import config 
from django.utils.translation import gettext_lazy as _
from auth_manage.connection import connect_to_vault
from auth_manage.vault_manage import get_secrets_in_vault
import os 

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# .env params
VAULT_ADDR=config('VAULT_ADDR')
VAULT_TOKEN=config('VAULT_TOKEN')
SECRET_DB_PATH=config('SECRET_DB_PATH')
VAULT_PATH_DJANGO=config('SECRET_DJANGO_PATH')
VAULT_MOUNT_POINT = config('MOUNT_POINT', default='secret')
VAULT_RSA_KEY_NAME=config('SECRET_RSA_KEY_NAME') 

# connect to vault 
try:
    client=connect_to_vault(VAULT_ADDR, VAULT_TOKEN)
except Exception as e:
    raise RuntimeError(f"Error connecting to Vault or retrieving DB secrets: {e}")
 
# upload media files
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media') 
LANGUAGES = [
    ('en', _('English')),
    ('es', _('Spanish')),
    ('zh', _('Chinese')),
    ('hi', _('Hindi')),
    ('ar', _('Arabic')),
    ('fr', _('French')),
    ('ru', _('Russian')),
    ('pt', _('Portuguese')),
    ('bn', _('Bengali')),
    ('ja', _('Japanese')),
    ('de', _('German')),
    ('ko', _('Korean')),
    ('it', _('Italian')),
    ('tr', _('Turkish')),
    ('vi', _('Vietnamese')),
    ('pl', _('Polish')),
    ('nl', _('Dutch')),
    ('sv', _('Swedish')),
    ('fa', _('Persian')),
    ('th', _('Thai')),
]

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
credsDjango=get_secrets_in_vault(client, VAULT_PATH_DJANGO, VAULT_MOUNT_POINT) 
SECRET_KEY = credsDjango['DJANGO_SECRET_KEY']

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = config('DEBUG', default=False, cast=bool)

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'story_presentation_app',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'presentation_service.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'presentation_service.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

credsUserDB=get_secrets_in_vault(client, SECRET_DB_PATH, VAULT_MOUNT_POINT) 
if credsUserDB is None:
    raise ValueError("Database credentials not found in Vault")

DATABASES = {
    'default': { 
        
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': credsUserDB['DB_NAME'],
        'USER': credsUserDB['DB_USER'],
        'PASSWORD': credsUserDB['DB_PASSWORD'], 
        'HOST': credsUserDB['DB_HOST'], 
        'PORT': int(credsUserDB['DB_PORT']),
        'OPTIONS': {
            'options': '-c client_encoding=UTF8',
        },
    }
} 


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = '/static/presentation/'
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles') 
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static'),
]

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

USERS_SERVICE_URL = config('USERS_SERVICE_URL', default='http://users:8000')